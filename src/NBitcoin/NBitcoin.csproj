<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Company>NBRhodium</Company>
    <Copyright>Copyright © BRhodium Platform SA 2017</Copyright>
    <Description>The C# Bitcoin Library based on NBitcoin</Description>
  </PropertyGroup>

  <PropertyGroup>
    <Version>4.0.0.54</Version>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <RootNamespace>NBitcoin</RootNamespace>
    <PackageId>NBRhodium</PackageId>
    <Authors>NBRhodium</Authors>
    <Product>NBRhodium</Product>
  </PropertyGroup>

  <PropertyGroup Condition="'$(MSBuildRuntimeType)' == 'Core'">
    <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;DEBUG;NETSTANDARD1_6;NETCORE;NOSTRNORMALIZE;NOCUSTOMSSLVALIDATION;</DefineConstants>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>TRACE;NETSTANDARD1_6;NETCORE;NOSTRNORMALIZE;NOCUSTOMSSLVALIDATION;</DefineConstants>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Protocol\Payloads\**" />
    <EmbeddedResource Remove="Protocol\Payloads\**" />
    <None Remove="Protocol\Payloads\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Protocol\AddressManager.cs" />
    <Compile Remove="Protocol\NodesGroup.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="BitcoinStream.Partial.tt" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="BRhodium.HashLib" Version="2.1.2.1" />
    <PackageReference Include="Newtonsoft.Json" Version="10.0.3" />
    <PackageReference Include="System.Diagnostics.TraceSource" Version="4.3.0" />
    <PackageReference Include="System.Net.NameResolution" Version="4.3.0" />
    <PackageReference Include="System.Net.Primitives" Version="4.3.0" />
    <PackageReference Include="System.Net.Requests" Version="4.3.0" />
    <PackageReference Include="System.Threading.Tasks.Parallel" Version="4.3.0" />
    <PackageReference Include="System.Threading.Thread" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>
 <!-- Copy pre-built library binaries on Windows  -->
  <Target Name="BuildNativeLibsWin" AfterTargets="AfterBuild" Condition="'$(IsWindows)' == 'true'">
    <ItemGroup>
      <Libs Include="$(ProjectDir)..\..\libs\runtimes\win-x64\*.dll" />
    </ItemGroup>

    <Copy SourceFiles="@(Libs)" DestinationFolder="$(OutDir)" />
  </Target>

  <!-- Build library binaries from source on Linux -->
  <Target Name="BuildNativeLibsLinux" AfterTargets="AfterBuild" Condition="'$(IsLinux)' == 'true'">
    <Exec Command="(cd $(ProjectDir)../Native/libmultihash &amp;&amp; make clean &amp;&amp; make) &amp;&amp; mv $(ProjectDir)../Native/libmultihash/libmultihash.so $(OutDir)" />
    <Exec Command="(cd $(ProjectDir)../Native/libcryptonote &amp;&amp; make clean &amp;&amp; make) &amp;&amp; mv $(ProjectDir)../Native/libcryptonote/libcryptonote.so $(OutDir)" />
    <Exec Command="(cd $(ProjectDir)../Native/libcryptonight &amp;&amp; make clean &amp;&amp; make) &amp;&amp; mv $(ProjectDir)../Native/libcryptonight/libcryptonight.so $(OutDir)" />
  </Target>

  <!-- Include library binaries in publish on Windows -->
  <Target Name="NativeLibsPublishIncludeWin" BeforeTargets="PrepareForPublish" Condition="'$(IsWindows)' == 'true'">
    <ItemGroup>
      <Libs Include="$(ProjectDir)..\..\libs\runtimes\win-x64\*.dll" />
      <ContentWithTargetPath Include="@(Libs->'%(FullPath)')" RelativePath="%(Libs.Identity)" TargetPath="%(Libs.Filename)%(Libs.Extension)" CopyToPublishDirectory="PreserveNewest" />
    </ItemGroup>
  </Target>

  <!-- Include library binaries in publish on Linux -->
  <Target Name="NativeLibsPublishIncludeLinux" BeforeTargets="PrepareForPublish" Condition="'$(IsLinux)' == 'true'">
    <ItemGroup>
      <Libs Include="$(OutDir)libmultihash.so;$(OutDir)libcryptonote.so;$(OutDir)libcryptonight.so" />
      <ContentWithTargetPath Include="@(Libs->'%(FullPath)')" RelativePath="%(Libs.Identity)" TargetPath="%(Libs.Filename)%(Libs.Extension)" CopyToPublishDirectory="PreserveNewest" />
    </ItemGroup>
  </Target>
</Project>
