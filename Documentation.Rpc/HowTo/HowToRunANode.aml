<?xml version="1.0" encoding="utf-8"?>
<topic id="3f6ac9de-8691-4df4-99f5-5d627eddc2c5" revisionNumber="1">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <section address="Section1">
      <title>Primary configuration of your node</title>
      <content>
        <para>It is good to update your server to latest software:</para>

<code language="cs">
apt-get update
apt-get upgrade -y
apt-get dist-upgrade -y
apt-get autoremove -y
apt-get autoclean –y
</code>

        <para>Create a new user for your node. It's much safer then to run it under root.</para>
<code language="cs">
adduser mynode
adduser mynode sudo
</code>

        <para>For correct compilation it is necessary to install:</para>

<code language="cs">
apt-get install git cmake build-essential libssl-dev pkg-config libboost-all-dev libsodium-dev libzmq5 tmux
</code>

<para>and latest MS .Net Core Framework</para>

<code language="cs">
https://dotnet.microsoft.com/download/linux-package-manager/ubuntu16-04/sdk-current
</code>

<para>After completing these steps you can continue with a first run.</para>

      </content>
    </section>

    <section address="Section2">
      <title>First run of Bitcoin Rhodium node</title>
      <content>
        <para>Switch to your new user (mynode) and run new TMUX session.</para>

<code language="cs">
su mynode
tmux new -s btrnode
</code>

        <para>Later you will attach this session with command.</para>
<code language="cs">
tmux a –t btrnode
</code>

        <para>Next step is cloning of master branch of actual node under your user (su mynode).</para>

<code language="cs">
Go to \home\mynode\

And clone this git:

git clone -b master_1.1.6 https://gitlab.com/bitcoinrh/BRhodiumNode.git
</code>

        <para>Now go to project folder and call.</para>

<code language="cs">
Go to \home\mynode\BRhodiumNode\src\BRhodium\

then call:

dotnet restore
dotnet build
</code>

<para>Run node with param <legacyBold>-testnet</legacyBold>.</para>

<code language="cs">
dotnet run –testnet
</code>

    <mediaLink>
    <caption>Then you will see something like this:</caption>
        <image xlink:href="firstrun"/>
    </mediaLink>

    <para>Don't wait for download and stop node with <legacyBold>CTRL+C</legacyBold>.</para>
      </content>
    </section>

    <section address="Section3">
      <title>Configure your node</title>
      <content>
        <para>Now go to new folder under your user (<legacyBold>can be hidden</legacyBold>).</para>


<code language="cs">
\home\mynode\.brhodiumnode\BRhodium\BRhodiumTest\

and open file BRhodium.conf:

nano BRhodium.conf
</code>

<para><legacyBold>TestNET configuration</legacyBold></para>

<para>Add testnet peer:</para>

<code language="cs">
Change line:
#addnode=ip:port
To:
addnode=217.182.72.173
</code>

<para>To allow access to API RPC-JSON set:</para>
<code language="cs">
Change line:
#server=0
To:
server=1
</code>

<para>Configure API RPC-JSON access authentication:</para>
 <para><legacyBold>If you don't need to secure access to API RPC-JSON just set server=1 only.</legacyBold></para>
<code language="cs">
Change lines:
#rpcbind=127.0.0.1
#rpcallowip=127.0.0.1
To
rpcbind=0.0.0.0
rpcallowip=0.0.0.0

Add lines:
rpcuser=youruser
rpcport=16661 (this is default testnet rpc port)
rpcpassword=yourpsw
</code>

<para>Save it. <lineBreak/>More information about API RPC-JSON access authentication <link xlink:href="e8437934-9f80-4efa-8d1b-fdf7c292be71">read here</link>.</para>
<para>Now run node again and download whole blockchain.</para>


<code language="cs">
Then go back to
\home\mynode\BRhodiumNode\src\BRhodium\

And run again:
dotnet run –testnet
</code>


    <mediaLink>
    <caption>Node is ready:</caption>
        <image xlink:href="downloading"/>
    </mediaLink>
      </content>
    </section>
  </developerHowToDocument>
</topic>